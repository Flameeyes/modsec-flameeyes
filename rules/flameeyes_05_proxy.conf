# -*- apache -*-
# Copyright © 2010-2012 Diego Elio Pettenò <flameeyes@flameeyes.eu>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and

# Checks for proxies and open proxies.
#
# Proxied requests will have either a Via or a X-Forwarded-For header
# added by the proxy itself; if it's found, register the IP as a proxy
# for the next week. Other checks might be implemented when coming
# through all kind of proxies.
#
# In either case, if not known already, check a list of DNSBL for open
# proxies (and other similar things like drones); keep the value
# cached for the next week, so to avoid further requests.
#
# Please note: all non-GET, non-HEAD requests will be scanned through
# DNSBL unless the IP is already marked as bad; to avoid resolving the
# same hostname each time, make sure to use a DNS cache (either
# through a caching nameserver or nscd as provided by GLIBC or
# FreeBSD).

SecRule &REQUEST_HEADERS:Via "@gt 0" \
	"id:430500,phase:2,setvar:ip.flameeyes_is_proxy=1,expirevar:ip.flameeyes_is_proxy=%{TX.IP_EXPIRATION},nolog"

SecRule &REQUEST_HEADERS:X-Forwarded-For "@gt 0" \
	"id:430501,phase:2,setvar:ip.flameeyes_is_proxy=1,expirevar:ip.flameeyes_is_proxy=%{TX.IP_EXPIRATION},nolog"

# BlueCoat is a hardware firewall/proxy device. While it does not send
# a Via header, it sends its own variation, which makes it easy to
# detect.
SecRule &REQUEST_HEADERS:X-BlueCoat-Via "@gt 0" \
	"id:430502,phase:2,setvar:ip.flameeyes_is_proxy=1,expirevar:ip.flameeyes_is_proxy=%{TX.IP_EXPIRATION},nolog"

# According to Wikipedia, this is generated by Z-Scaler hardware
# proxies.
SecRule &REQUEST_HEADERS:Z-Forwarded-For "@gt 0" \
	"id:430503,phase:2,setvar:ip.flameeyes_is_proxy=1,expirevar:ip.flameeyes_is_proxy=%{TX.IP_EXPIRATION},nolog"

# Draft for a standard replacement for X-Forwarded-For, used by Opera
# and Chrome compression proxies.
SecRule &REQUEST_HEADERS:Forwarded "@gt 0" \
	"id:430504,phase:2,setvar:ip.flameeyes_is_proxy=1,expirevar:ip.flameeyes_is_proxy=%{TX.IP_EXPIRATION},nolog"

SecAction "id:430510,phase:2,setvar:tx.originating_ip=%{REMOTE_HOST},nolog"

# Opera allows a "Turbo" operation where all the requests are coming
# through their cluster of proxy servers; those tend to _always_ be in
# blacklists as everybody with Opera uses them. On the other hand, we
# can trust them to provide us with the correct X-Forwarded-For value
# for the originating IP address (we can't trust all of them because
# a spammer might forge it to point us ot the wrong IP!)
SecRule REMOTE_HOST "@endsWith opera-mini.net" \
	"id:430511,phase:2,setvar:tx.originating_ip=%{REQUEST_HEADERS.X-Forwarded-For},nolog"

# The Puffin browser for Android and iOS is based on a similar system
# to Opera's and is always proxied through one of their
# servers. Unfortunately, as of creating this list, @ipMatchFromFile
# is crashing Apache so I'm not going to use it.
#
# The list is probably not complete, so anybody with a Puffin browser
# from around the world might want to contact me if they get strange
# results.
SecRule REMOTE_ADDR "@ipMatch 38.99.120.0/22" \
	"id:430512,phase:2,setvar:tx.originating_ip=%{REQUEST_HEADERS.X-Forwarded-For},nolog"

# Chrome Data Server extension proxies requests through Google servers;
# trust the X-Forwarded-For header similarly to Opera.
SecRule REMOTE_ADDR "^google-proxy-[\d-]+\.google\.com$" \
	"id:430513,phase:2,setvar:tx.originating_ip=%{REQUEST_HEADERS.X-Forwarded-For},nolog"

# Ignore GET and HEAD requests, as they shouldn't allow posting
# anything at all, and this reduces the load on the checks.
SecRule REQUEST_METHOD "@pm get head" "id:430520,phase:2,t:lowercase,skipAfter:FLAMEEYES_END_PROXY,nolog"

SecRule REMOTE_HOST "@endsWith .anonymouse.org" \
	"id:430531,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'Request coming through Anonymouse service',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl http.dnsbl.sorbs.net" \
        "id:430532,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl socks.dnsbl.sorbs.net" \
        "id:430533,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl misc.dnsbl.sorbs.net" \
        "id:430534,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl dnsbl.proxybl.org" \
        "id:430535,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl dnsbl.dronebl.org" \
        "id:430536,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl list.blogspambl.com" \
        "id:430537,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl cbl.abuseat.org" \
        "id:430538,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl dnsbl.tornevall.org" \
        "id:430539,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecRule TX:ORIGINATING_IP "@rbl rbl.efnetrbl.org" \
        "id:430540,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

# Rule id:430541 was used for dnsbl.swiftbl.org (gone 01/2015). Do not reuse this id.
# Rule id:430542 was used for cidr.bl.mcafee.com (gone 02/2016). Do not reuse this id.

SecRule TX:ORIGINATING_IP "@rbl all.s5h.net" \
        "id:430543,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

# This requires SecHttpBlKey to be set!
SecRule TX:ORIGINATING_IP "@rbl dnsbl.httpbl.org" \
        "id:430544,phase:2,setvar:tx.flameeyes_is_openproxy=1,msg:'%{TX:ORIGINATING_IP} is blacklisted',skipAfter:FLAMEEYES_PROXY_REQUEST"

SecMarker FLAMEEYES_PROXY_REQUEST

SecRule TX:FLAMEEYES_IS_OPENPROXY "@eq 1" \
          "id:430599,phase:2,msg:'%{REQUEST_METHOD} request through open proxy',deny,status:403"

SecMarker FLAMEEYES_END_PROXY
